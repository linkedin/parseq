apply plugin: 'com.github.johnrengelman.shadow'


description = """Finds source code location and infers operation for lambda expressions"""


configurations {
  testRuntime.extendsFrom shadow
}

dependencies {
  shadow group: 'com.linkedin.agentloader', name: 'linkedin-agent-loader', version: '1.0.4'
  shadow group: 'org.ow2.asm', name: 'asm-all', version: '5.1'
  testCompile group: 'org.testng', name: 'testng', version: '6.9.9'
}

sourceSets.main.compileClasspath += configurations.shadow + sourceSets.main.compileClasspath

javadoc.classpath += configurations.shadow + sourceSets.main.compileClasspath

buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
  }
}

shadowJar {
  configurations += [project.configurations.shadow]
  classifier = null
  relocate 'org.objectweb', 'parseq.org.objectweb'
}

jar {
  manifest {
    attributes 'Agent-Class': 'com.linkedin.parseq.lambda.ASMBasedTaskDescriptor$Agent'
  }
}

uploadArchives.dependsOn shadowJar
assemble.dependsOn shadowJar

uploadArchives {
  repositories {
    mavenDeployer {
      pom.project {
        description description

        developers {
          developer {
            id 'jodzga'
            name 'Jaroslaw Odzga'
            email 'jodzga@linkedin.com'
          }
        }
      }
    }
  }
}

compileJava.options.compilerArgs += '-Xlint:-unchecked'